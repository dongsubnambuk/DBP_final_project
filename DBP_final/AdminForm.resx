<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHome.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAE8RJREFUeF7t
        nTuvLUcRhfmV5MSkQIZwQmIkR2BCExoCy4AFBoQt2xhsDAjpEtpEWHICAUgQocP9Drfscnl1Tc9j7/OY
        FXy6+8x0V79qdXX3zN73S1/78is3xhiNBWJMgwViTIMFYkyDBWJMgwViTIMFYkyDBWJMgwViTIMFYkyD
        BWJMgwViTIMFYkyDBWJMgwViTIMFYkyDBWJMgwViTIMFYkyDBWJMgwViTIMFYkyDBWJMgwViTIMFYkyD
        BWJMgwViTIMFYkyDBWJMgwViTIMFYkyDBWJMgwViTIMFYkyDBWJMgwViTIMFYkyDBWJMgwViTIMFYkyD
        BXJHvPCN125eev4XN7/44Zu3vP3aWzcfPnnvUz544zef3iPdi8/9XNoxl8UCuRI4OCL4+KPf39z898+b
        IT92EM03v/KqLMschwVyQb7/3M9uI8G///kn6exH8OS9396KRZVv9mOBHAyz+svf/dXNPz75g3ToS4EI
        WY45qhyLBXIgOOglo8UMFsqxWCAHwFJqS8T4+K/v33z05Hc3v/zRm0O4Dyp/B0Ihkqn6mnkskB0wS7MH
        UA6qCDEgKGVvCU6+fvzSr2/+8v670r6CE7Fvf/Un0p5ZxgLZCE4+s5wiSuDURzvp7V7ne7+cii630eRp
        WmXH9FggG2CNrxwxg+NujRQBopoRFpHlgzffkfXIcKKm8psxFshKcDLlfME/PvlgtzCAqMPMv8YWaZci
        CktCb+DnsUBWsCQO9hcq3xqIGOwbwuYWsbGc+s+//vi5umV42LgkEovo/1ggk3TiIGqwzFH51hBRI9ve
        Go1w8BxNqCPLMMSjnB9hcupFhKEOR++ZHioWyASdODhR2jvb1qiBzYgAe5drCEI5O3XmCTxtq0fUCKmm
        PysWyAIsm7LzZI5wpBw1EMUPvvP67fWY/fcKJDP7Ppijx2dYIA04p3IgwNFUnllU1MiR6AiBxHOTXM4S
        jh6fxwIZgLPW/cBRTjSKGpktAkF0eR+R6zyLo8fnsUAGjGbdPeJYihqZEMjSydhoH7EFR48vYoEI2Ngq
        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
</value>
  </data>
</root>